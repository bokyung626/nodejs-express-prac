// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // 프로젝트 최상위 디렉토리에 있는 env 파일에서 불러옴
}

model User{
  id String @id @default(uuid()) 

  email String @db.VarChar(200) @unique
  name String @db.VarChar(200)
  //phoneNumber String @db.Char(11)
  password String
  
  posts Post[]
  comments Comment[]
  postLikes PostLike[]
}

model PostLike {
  userId String
  user User @relation(fields: [userId], references: [id])
  postId String
  post Post @relation(fields: [postId], references: [id])

  //복합키로 설정 //2개 이상의 컬럼을 기본키로 설정할 때
  @@id([userId, postId])
}

model Post{
  id String @id @default(uuid())

  title String @db.VarChar(200)
  content String @db.LongText
  createdAt DateTime @default(now())

  userId String
  user User @relation(fields: [userId], references: [id])

  commnets Comment[]
  postLike PostLike[]
  tags Tag[]
}

model Comment {
  id String @id @default(uuid())

  content String @db.VarChar(300)

  //자기 자신과 관계를 맺을 경우 첫번째 인자로 이름을 넣어줘야 함.
  parentCommentId String?
  parentComment Comment? @relation("parentComment", fields: [parentCommentId], references: [id])
  
  userId String
  user User @relation(fields: [userId], references: [id])
  postId String
  post Post @relation(fields: [postId], references: [id])

  childComments Comment[] @relation("parentComment")
}

model Tag{
  id String @id @default(uuid())
  
  name String @db.VarChar(120)

  postId String
  post Post @relation(fields: [postId], references: [id])
}
